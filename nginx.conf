events {
	worker_connections 1024;
}

rtmp {
	server {
		listen 1935;

		application live {
			live on;

			hls on;
			hls_path /tmp/hls;
			hls_fragment 1s;
			hls_playlist_length 4s;
			hls_continuous on;
			hls_sync 2ms;
			hls_cleanup off;

			deny play all;

			record all;
			record_path /home/recordings;
			record_unique off;
			exec ffmpeg -i rtmp://localhost/$app/$name -async 1 -vsync -1
				-c:v libx264 -c:a libvo_aacenc -b:v 256k -b:a 32k -vf "scale=480:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_low
				-c:v libx264 -c:a libvo_aacenc -b:v 768k -b:a 96k -vf "scale=720:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_mid
				-c:v libx264 -c:a libvo_aacenc -b:v 1024k -b:a 128k -vf "scale=960:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_high
				-c:v libx264 -c:a libvo_aacenc -b:v 1920k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_hd720
				-c copy -f flv rtmp://localhost/show/$name_src;

			hls_variant _low BANDWIDTH=288000; # Low bitrate, sub-SD resolution
			hls_variant _mid BANDWIDTH=448000; # Medium bitrate, SD resolution
			hls_variant _high BANDWIDTH=1152000; # High bitrate, higher-than-SD resolution
			hls_variant _hd720 BANDWIDTH=2048000; # High bitrate, HD 720p resolution
			hls_variant _src BANDWIDTH=4096000; # Source bitrate, source resolutio


			on_publish http://127.0.0.1:5000/stream/start_by_token_nginx;
			on_publish_done http://127.0.0.1:5000/stream/end_by_token_nginx;
			on_record_done http://127.0.0.1:5000/stream/done_recording_nginx;

			drop_idle_publisher 10s;
			idle_streams off;

			notify_update_timeout 10s;
			notify_update_strict on;
			on_update http://127.0.0.1:5000/stream/is_streaming_nginx;

			exec_record_done ffmpeg -i $path -c:v libx264 -crf 19 -strict experimental $dirname/$basename.mp4;
		}
	}
}

# HTTP can be used for accessing RTMP stats
http {
	include mime.types;
	default_type application/octet-stream;

	sendfile on;
	keepalive_timeout 65;

	server {
		listen      80;

		location / {
			proxy_pass http://127.0.0.1:5000;
		}

		location /hls/ {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length';

			# allow CORS preflight requests
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			types {
				application/vnd.apple.mpegurl m3u8;
				video/mp2t ts;
				video/mp4 mp4;
			}
			alias /tmp/hls/;
			autoindex on;
		}

		location /vod/ {
			types {
				video/mp4  mp4;
			}
			alias /home/recordings;
			autoindex on;
		}
	}
}